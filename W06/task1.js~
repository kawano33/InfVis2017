function main(){

    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
    var width = 500;
    var height = 500;

    var scene = new THREE.Scene();

    var fov = 45;
    var aspect = width / height;
    var near = 1;
    var far = 1000;
    var camera = new THREE.PerspectiveCamera( fov, aspect, near, far );
    camera.position.set( 0, 0, 5 );
    scene.add( camera );

    var light = new THREE.PointLight( 0xffffff );
    light.position.set(1, 1, 1);
    scene.add(light);

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( width, height );
    document.body.appendChild( renderer.domElement );
    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

    //define vertices
    var vertices = [
	[-1, 1, 1],
	[-1,-1, 1],
	[ 1,-1, 1],
	[ 1, 1, 1],
	[-1, 1,-1],
	[-1,-1,-1],
	[ 1,-1,-1],
	[ 1, 1,-1]
    ];

    //define faces
    var faces = [
	[0,1,2],
	[0,2,3]
    ];

    //set vertices
    var v0 = new THREE.Vector3().fromArray( vertices[0] );
    var v1 = new THREE.Vector3().fromArray( vertices[1] );
    var v2 = new THREE.Vector3().fromArray( vertices[2] );
    var v3 = new THREE.Vector3().fromArray( vertices[3] );
    var v4 = new THREE.Vector3().fromArray( vertices[4] );
    var v5 = new THREE.Vector3().fromArray( vertices[5] ); 
    var v6 = new THREE.Vector3().fromArray( vertices[6] );
    var v7 = new THREE.Vector3().fromArray( vertices[7] );

    //set faces
    var id = faces[0];
    var id2 = faces[1];
    var f0 = new THREE.Face3( id[0], id[1], id[2] );
    var f1 = new THREE.Face3( id2[0], id2[1], id2[2] );

    var geometry = new THREE.Geometry();
    geometry.vertices.push( v0 );
    geometry.vertices.push( v1 );
    geometry.vertices.push( v2 );
    geometry.vertices.push( v3 );
    geometry.vertices.push( v4 );
    geometry.vertices.push( v5 );
    geometry.vertices.push( v6 );
    geometry.vertices.push( v7 );
    geometry.faces.push( f0 );
    geometry.faces.push( f1 );
    //geometry.faces.push( f2 );
    /*
    var geometry1 = new THREE.Geometry();
    geometry1.vertices.push( v0 );
    geometry1.vertices.push( v2 );
    geometry1.vertices.push( v3 );
    geometry1.faces.push( f0 );
    
    var geometry2 = new THREE.Geometry();
    geometry2.vertices.push( v0 );
    geometry2.vertices.push( v5 );
    geometry2.vertices.push( v1 );
    geometry2.faces.push( f0 );
    
    var geometry3 = new THREE.Geometry();
    geometry3.vertices.push( v0 );
    geometry3.vertices.push( v4 );
    geometry3.vertices.push( v5 );
    geometry3.faces.push( f0 );

    var geometry4 = new THREE.Geometry();
    geometry4.vertices.push( v1 );
    geometry4.vertices.push( v5 );
    geometry4.vertices.push( v6 );
    geometry4.faces.push( f0 );

    var geometry5 = new THREE.Geometry();
    geometry5.vertices.push( v1 );
    geometry5.vertices.push( v6 );
    geometry5.vertices.push( v2 );
    geometry5.faces.push( f0 );

    var geometry6 = new THREE.Geometry();
    geometry6.vertices.push( v2 );
    geometry6.vertices.push( v6 );
    geometry6.vertices.push( v7 );
    geometry6.faces.push( f0 );

    var geometry7 = new THREE.Geometry();
    geometry7.vertices.push( v2 );
    geometry7.vertices.push( v7 );
    geometry7.vertices.push( v3 );
    geometry7.faces.push( f0 );

    var geometry8 = new THREE.Geometry();
    var geometry9 = new THREE.Geometry();
    var geometry10 = new THREE.Geometry();
    var geometry11 = new THREE.Geometry();    
    */    

    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
    var material = new THREE.MeshBasicMaterial();
    //var material = new THREE.MeshLambertMaterial( { color: 0xffffff } );
    material.vertexColoers = THREE.FaceColors;
    material.side = THREE.DoubleSide
    
    geometry.faces[0].color = new THREE.Color( 1, 0, 0 );
    
    var cube = new THREE.Mesh( geometry, material );
    scene.add( cube );

    loop();

    function loop()
    {
        requestAnimationFrame( loop );
        cube.rotation.x += 0.001;
        cube.rotation.y += 0.005;
        renderer.render( scene, camera );
    }

}
